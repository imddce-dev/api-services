services:
  # minio:
  #   image: minio/minio:RELEASE.2025-09-07T16-13-09Z-cpuv1
  #   container_name: minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     MINIO_ROOT_USER: admin
  #     MINIO_ROOT_PASSWORD: "g0c;;myogs96dkiIN"
  #   volumes:
  #     - ./minio/data:/data
  #   networks:
  #     - backend
  #   command: server /data --console-address ":9001"

  # redis:
  #   image: redis:7.2.4
  #   container_name: my-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - ./redis/data:/data
  #   networks:
  #     - backend

  mariadb:
    image: mariadb:11.4
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: "g0Uc;;myogs96dkiIN"
    volumes:
      - ./mariadb/data:/var/lib/mysql
    networks:
      - backend

  backend:
    build: ./server   # ต้องมี Dockerfile ใน ./server 
    container_name: backend
    ports:
      - "3000:8080"
    env_file:
      - .env 
    depends_on:
      - mariadb
    networks:
      - backend

  npm-db:
    image: mariadb:11.4
    container_name: npm-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: npm_root_pass
      MYSQL_DATABASE: npm
      MYSQL_USER: npm
      MYSQL_PASSWORD: npm_pass
    volumes:
      - ./npm/data:/var/lib/mysql
    networks:
      - backend

  nginxproxymanager:
    image: jc21/nginx-proxy-manager:2.12.2
    container_name: nginxproxymanager
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    environment:
      DB_MYSQL_HOST: npm-db
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: npm
      DB_MYSQL_PASSWORD: npm_pass
      DB_MYSQL_NAME: npm
    volumes:
      - ./npm/data:/data
      - ./npm/letsencrypt:/etc/letsencrypt
    depends_on:
      - npm-db
    networks:
      - backend

# vault:
#   image: hashicorp/vault:1.18.1
#   container_name: vault
#   ports:
#     - "8200:8200"
#   cap_add:
#     - IPC_LOCK
#   environment:
#     VAULT_DEV_ROOT_TOKEN_ID: "root"
#   volumes:
#     - ./vault/file:/vault/file
#     - ./vault/config:/vault/config
#   networks:
#     - backend

networks:
  backend:
    driver: bridge
